@startuml Fabric System Overview
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define AzurePuml https://raw.githubusercontent.com/plantuml-stdlib/Azure-PlantUML/release/2-1/dist

!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/Web/AzureCDN.puml

!include DEVICONS/java.puml
!include DEVICONS/javascript_badge.puml
!include DEVICONS/npm.puml
!include DEVICONS/react.puml
!include DEVICONS/swift.puml

!include DEVICONS2/nextjs_original_wordmark.puml
!include DEVICONS2/yarn_wordmark.puml
!include DEVICONS2/typescript.puml
!include DEVICONS2/nestjs_wordmark.puml

!include FONTAWESOME/users.puml
!include FONTAWESOME/cubes.puml

skinparam wrapWidth 200

' LAYOUT_AS_SKETCH()
UpdateSkinparamsAndLegendEntry("external_system", $bgColor=Red, $fontColor=White, $borderColor=Black)

Person(customer, "Customer", "A customer", users)
' LAYOUT_LEFT_RIGHT()
LAYOUT_TOP_DOWN()

' TODO: Bound in an Azure Container when this is understood
AzureCDN(cdn, "CDN", "Akamai", "Caches publicly available content for speed")  

' Containers
Container_Boundary(fabric_app, "Fabric Azure Compliant Kubernetes Workload Cluster"){  
  Container(web_app, "Fabric b2c Channel Web App", "Javascript, Typescript, Next.js, React", "Web application", "nextjs_original_wordmark")
  
  Container(bff, "BFF", "Javascript, Typescript, Apollo, GraphQL", "Backend for frontend", "javascript_badge")
  
  Container(service_content, "Rest API", "Javascript, Typescript, Nest.js", "Content Domain Service", "nestjs_wordmark")
  Container(service_cms_configuration, "Rest API", "Javascript, Typescript, Nest.js", "CMS Configuration Service", "nestjs_wordmark")
  Container(service_cart, "Rest API", "Javascript, Typescript, Nest.js", "Cart Domain Service", "nestjs_wordmark")
  Container(service_product, "Rest API", "Javascript, Typescript, Nest.js", "Product Domain Service", "nestjs_wordmark")  
  Container(service_customer, "Rest API", "Javascript, Typescript, Nest.js", "Customer Domain Service", "nestjs_wordmark")  
  Container(service_search, "Rest API", "Javascript, Typescript, Nest.js", "Search Domain Service", "nestjs_wordmark")  
  Container(service_order, "Rest API", "Javascript, Typescript, Nest.js", "Order Domain Service", "nestjs_wordmark")  
}

' Container_Boundary(eip, "Enterprise Integration Platform"){
' }

Container_Boundary(mobile_device, "Mobile Device") {
  Container(ios_app, "Fabric IOS Mobile App", "Swift", "IOS Mobile Application", "swift")
  Container(android_app, "Fabric Android Mobile", "Java", "Android Mobile Application", "java")    
}

' External Systems
System_Ext(contentstack, "Contentstack", "Headless CMS", "cubes")
System_Ext(commerce_tools, "Commercetools", "Headless Commerce", "cubes")
System_Ext(sap_cdc, "SAP CIAM", "SAP customer and identity access management", "cubes")
System_Ext(attraqt, "Attraqt", "Ecommerce Solutions and Search", "cubes")
System_Ext(sap_hybris, "SAP Hybris", "Ecommerce platform B2B B2C", "cubes")
' System_Ext(worldpay, "Worldpay", "EFT to wire money via SWIFT", "cubes")
' System_Ext(ikano, "Staff discounts", "Ikano Rewards for discounts", "cubes")

' People
' NOTE The CDN is incorrectly mapped, added for example sake 
Rel(customer, cdn, "uses browser", "HTTPS, Native")
Rel(customer, ios_app, "uses app", "Native")
Rel(customer, android_app, "uses app", "Native")
Rel_Back(cdn, ios_app, "Caches and routes")
Rel_Back(cdn, android_app, "Caches and routes")
Rel(cdn, web_app, "Caches and routes")

' Other vendors
' Rel(web_app, worldpay, "Make payments via", "API, Http")
' Rel(web_app, ikano, "Get staff discounts via", "API, Http")

' BFF
Rel(web_app, bff, "Uses", "GraphQL, GQL, HTTP")

' API's
Rel(ios_app, bff, "Uses", "GraphQL, GQL, HTTP")
' Rel(ios_app, service_content, "Uses", "HTTP")
' Rel(ios_app, service_cms_configuration, "Uses", "HTTP")
' Rel(ios_app, service_cart, "Uses", "HTTP")
' Rel(ios_app, service_product, "Uses", "HTTP")
' Rel(ios_app, service_customer, "Uses", "HTTP")
' Rel(ios_app, service_search, "Uses", "HTTP")
' Rel(ios_app, service_order, "Uses", "HTTP")

Rel(android_app, bff, "Uses", "GraphQL, GQL, HTTP")
' Rel(android_app, service_content, "Uses", "HTTP")
' Rel(android_app, service_cms_configuration, "Uses", "HTTP")
' Rel(android_app, service_cart, "Uses", "HTTP")
' Rel(android_app, service_product, "Uses", "HTTP")
' Rel(android_app, service_customer, "Uses", "HTTP")
' Rel(android_app, service_search, "Uses", "HTTP")
' Rel(android_app, service_order, "Uses", "HTTP")

Rel(bff, service_content, "Uses", "HTTP")
' Rel(bff, service_cms_configuration, "Uses", "HTTP")
Rel(bff, service_cart, "Uses", "HTTP")
Rel(bff, service_product, "Uses", "HTTP")
Rel(bff, service_customer, "Uses", "HTTP")
Rel(bff, service_search, "Uses", "HTTP")
Rel(bff, service_order, "Uses", "HTTP")

' Commerce Tools
Rel(service_cart, commerce_tools, "Uses", "HTTP, Headless")
Rel(service_product, commerce_tools, "Uses", "HTTP, Headless")

' Contentstack
Rel(service_content, contentstack, "Uses", "HTTP, Headless")
Rel(service_cms_configuration, contentstack, "Configures", "HTTP, Headless")

' SAP CDC
Rel(service_customer, sap_cdc, "Uses", "HTTP")

' Attraqt
Rel(service_search, attraqt, "Uses", "HTTP")

' SAP Hybris
Rel(service_order, sap_hybris, "Uses", "Azure message bus")
Rel(bff, sap_hybris, "Uses", "who-am-i endpoint")

SHOW_DYNAMIC_LEGEND()

@enduml